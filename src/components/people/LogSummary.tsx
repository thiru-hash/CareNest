"use client";

import { useFormState, useFormStatus } from "react-dom";
import { summarizeLogsAction, FormState } from "@/app/actions";
import { Client } from "@/lib/types";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { useEffect } from "react";
import { useToast } from "@/hooks/use-toast";
import { AlertTriangle, Bot, Loader2, Sparkles, TrendingUp } from "lucide-react";

const initialState: FormState = {
  message: "",
};

function SubmitButton() {
  const { pending } = useFormStatus();
  return (
    <Button type="submit" disabled={pending}>
      {pending ? (
        <>
          <Loader2 className="mr-2 h-4 w-4 animate-spin" />
          Generating...
        </>
      ) : (
        <>
          <Sparkles className="mr-2 h-4 w-4" />
          Generate Summary
        </>
      )}
    </Button>
  );
}


export function LogSummary({ client }: { client: Client }) {
  const [state, formAction] = useFormState(summarizeLogsAction, initialState);
  const { toast } = useToast();

  useEffect(() => {
    if (state.message && !state.error) {
        toast({
            title: "Success",
            description: state.message,
        });
    } else if (state.message && state.error) {
        toast({
            variant: "destructive",
            title: "Error",
            description: state.message,
        });
    }
  }, [state, toast]);

  return (
    <div className="grid gap-6">
      <form action={formAction} className="space-y-4">
        <input type="hidden" name="clientName" value={client.name} />
        <Card>
            <CardHeader>
                <CardTitle>Support Logs</CardTitle>
                <CardDescription>Enter or review the support logs for {client.name}.</CardDescription>
            </CardHeader>
            <CardContent>
                <div className="space-y-2">
                    <Label htmlFor="supportLogs">Logs</Label>
                    <Textarea
                    id="supportLogs"
                    name="supportLogs"
                    defaultValue={client.supportLogs}
                    rows={8}
                    className="font-mono text-xs"
                    />
                </div>
            </CardContent>
        </Card>
        <SubmitButton />
      </form>
      
      {state.summary && (
        <Card className="bg-primary/5 border-primary/20">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
                <Bot className="text-primary"/>
                <span>AI-Generated Analysis</span>
            </CardTitle>
            <CardDescription>This summary was generated by AI and should be reviewed for accuracy.</CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            <div>
              <h3 className="font-semibold flex items-center gap-2 mb-2"><Sparkles className="h-5 w-5 text-primary"/>Summary</h3>
              <p className="text-muted-foreground">{state.summary.summary}</p>
            </div>
            <div>
              <h3 className="font-semibold flex items-center gap-2 mb-2"><TrendingUp className="h-5 w-5 text-primary"/>Identified Trends</h3>
              <p className="text-muted-foreground">{state.summary.trends}</p>
            </div>
            <div>
              <h3 className="font-semibold flex items-center gap-2 mb-2"><AlertTriangle className="h-5 w-5 text-yellow-500"/>Potential Issues</h3>
              <p className="text-muted-foreground">{state.summary.potentialIssues}</p>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
